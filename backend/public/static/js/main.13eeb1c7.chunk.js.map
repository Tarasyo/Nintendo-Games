{"version":3,"sources":["shared/components/UIElements/Avatar.js","shared/components/UIElements/Card.js","genre/components/GenreItem.js","genre/components/GenreList.js","shared/components/UIElements/Backdrop.js","shared/components/UIElements/Modal.js","shared/components/FormElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/LoadingSpinner.js","shared/hooks/http-hook.js","genre/pages/Genre.js","shared/util/validators.js","shared/components/FormElements/Input.js","shared/components/FormElements/ImageUpload.js","shared/hooks/form-hook.js","games/pages/NewGame.js","games/components/GameItem.js","games/components/GameList.js","games/pages/GenreGames.js","games/pages/UpdateGame.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["Avatar","props","className","style","src","image","alt","width","height","Card","children","GenreItem","to","_id","name","GenreList","items","length","map","genre","key","id","gamesCount","games","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","ModalOverlay","content","headerClass","header","onSubmit","event","preventDefault","contentClass","footerClass","footer","Modal","Fragment","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","Button","href","size","inverse","danger","exact","type","disabled","ErrorModal","onClear","error","LoadingSpinner","asOverlay","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","console","log","useEffect","forEach","abortCtrl","abort","clearError","Genre","loadedGenres","setLoadedGenres","fetchGenres","VALIDATOR_MAX","val","validate","value","validators","isValid","validator","trim","test","inputReducer","state","action","isTouched","Input","useReducer","initialValue","initialValid","inputState","dispatch","onInput","changeHandler","target","element","placeholder","onChange","onBlur","htmlFor","label","errorText","ImageUpload","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","pickedFile","fileIsValid","files","center","click","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","inputData","formValidity","NewGame","publisher","release","director","rank","genreId","inputHandler","history","useHistory","gameSubmitHandler","formData","FormData","append","GameItem","showConfirmModal","setShowConfirmModal","cancelDeleteHandler","confirmDeleteHandler","onDelete","GameList","game","onDeleteGame","GenreGames","loadedGames","setLoadedGames","useParams","fetchGames","deletedGameId","prevGames","UpdateGame","loadedGame","setLoadedGame","gameId","imageUrl","setFormData","fetchGame","gameUpdateSubmitHandler","JSON","stringify","MainHeader","NavLinks","SideDrawer","MainNavigation","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","App","path","render"],"mappings":"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","file":"static/js/main.13eeb1c7.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Avatar.css';\n\n\n//Avatar component hadlse pictures of the genres\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Avatar from '../../shared/components/UIElements/Avatar';\nimport Card from '../../shared/components/UIElements/Card';\nimport './GenreItem.css';\n\n\n//GenerItem takes data from GenerList and and create alement on the front page with help of Card component\nconst GenreItem = props => {\n  return (\n    <li className=\"genre-item\">\n      <Card className=\"genre-item__content\">\n        <Link to={`/${props._id}/games`}>\n          <div className=\"genre-item__image\">\n            <Avatar image={props.image} alt={props.name} />\n          </div>\n          <div className=\"genre-item__info\">\n            <h2>{props.name}</h2>\n          </div>\n        </Link>\n      </Card>\n    </li>\n  );\n};\n\nexport default GenreItem;\n","import React from 'react';\n\nimport GenreItem from './GenreItem';\nimport Card from '../../shared/components/UIElements/Card';\nimport './GenreList.css';\n\n\n//GenerList component takes data from Genre and retrive each element and pass it next to GenerItem\nconst GenreList = props => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>Genre not found.</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"genre-list\">\n      {props.items.map(genre => (\n        <GenreItem\n          key={genre._id}\n          _id={genre._id}\n          id={genre.id}\n          image={genre.image}\n          name={genre.name}\n          gamesCount={genre.games.length}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default GenreList;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\n//Back drope in time when SideDrawer works u can close and open navigation bar\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import { useState, useCallback, useRef, useEffect } from 'react';\n\n\n\n//HTTP hook that used when API requests sends\n//handele responses and errors\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = 'GET', body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal\n        });\n\n        const responseData = await response.json();\n        \n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          reqCtrl => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n        console.log(responseData);\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","import React, { useEffect, useState } from 'react';\n\nimport GenreList from '../components/GenreList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\n\n//Genre component send get request, and pass response in loadedGenres whisch pas to GenerList\nconst Genre = () => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedGenres, setLoadedGenres] = useState();\n\n  \n  useEffect(() => {\n    const fetchGenres = async () => {\n      try {\n        const responseData = await sendRequest(\n          'https://lit-ridge-92949.herokuapp.com/api/genre/'\n        );\n\n        setLoadedGenres(responseData);\n        \n      } catch (err) {}\n    };\n    fetchGenres();\n   \n  }, [sendRequest]);\n  \n \n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedGenres && <GenreList items={loadedGenres} />}\n    </React.Fragment>\n  );\n  \n};\n\nexport default Genre;\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\n\n// Few Validation Forms Was taken from Udemy course\n//To handle some input form validation \n\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\n\n//Custome input component have special behavior on touche and change\n//hace owne css\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid)\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  //If elemet is initilized as input its will be input field if elment initilized as something dofferen its will be select form\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) :  (\n        <select id={props.id}  value={inputState.value} onChange={changeHandler}>\n            <option value =\"\"> -- select an option -- </option>            \n            <option value=\"5ea843e99293e91547d742c7\">Adventure</option>\n            <option value=\"5ea8445d9293e91547d742c8\">Role-playing</option>\n            <option value=\"5ea5ef68be62a5d46a660f80\">Sports</option>\n            <option value=\"5ea844f39293e91547d742c9\">Life Simulation</option>\n            <option value=\"5ea845679293e91547d742ca\">Fighting game</option>\n        </select>\n    );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid && inputState.isTouched &&\n        'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { useRef, useState, useEffect } from 'react';\n\nimport Button from './Button';\nimport './ImageUpload.css';\n\n\n//Image uploud component takes just 3 types of file on clidk open the file picker\n//moste of the code taken from Udemy course\nconst ImageUpload = props => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n\n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickedHandler = event => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: 'none' }}\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && 'center'}`}>\n        <div className=\"image-upload__preview\">\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {!previewUrl && <p>Please pick an image.</p>}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>\n          PICK IMAGE\n        </Button>\n      </div>\n      {!isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import { useCallback, useReducer } from 'react';\n\n\n//Hook bettwen forms, chiled perent elements and some components \n//Main behavior is on INPUT_CHANGE and SET_DATA\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n//import DatePicker from 'react-datepicker';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload'\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MAX\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport './GameForm.css';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\n\n//Add new game commponent \nconst NewGame = () => {\n    //const [startDate, setStartDate] = useState(new Date());\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  //If some changes are made in form this wll change the value in use form \n  //isValid checks for value not to be empty the submit button will be active just if\n  //all isValid will be true\n  const [formState, inputHandler] = useForm(\n    {\n      name: {\n        value: '',\n        isValid: false\n      },\n      publisher: {\n        value: '',\n        isValid: false\n      },\n      release: {\n        value: '',\n        isValid: false\n      },\n      director: {\n        value: '',\n        isValid: false\n      },\n      rank: {\n        value: '',\n        isValid: false\n      },\n      image: {\n        value: '',\n        isValid: false\n      },\n      genreId: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n    \n  \n//POST request takes input value of each vatible and send it \n  const history = useHistory();\n\n  const gameSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n        const formData = new FormData();\n        formData.append('name', formState.inputs.name.value);\n        formData.append('publisher', formState.inputs.publisher.value);\n        formData.append('image', formState.inputs.image.value);\n        formData.append('release', formState.inputs.release.value);\n        formData.append('director', formState.inputs.director.value);\n        formData.append('rank', formState.inputs.rank.value);\n        formData.append('genreId', formState.inputs.genreId.value);\n      await sendRequest(\n        'https://lit-ridge-92949.herokuapp.com/api/games/',\n        'POST',\n        formData\n      );\n      history.push('/');\n    } catch (err) {}\n  };\n  \n//this is input form wit hhas error handalin. Iput component was custom createt and validation of the fillds as well\n//Most of ipuputs requre some input just rank cheks some number not motre then 10\n  return (\n      <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <form className=\"game-form\" onSubmit={gameSubmitHandler}>\n        {isLoading && <LoadingSpinner asOverlay />}\n      <Input\n        id=\"name\"\n        element=\"input\"\n        type=\"text\"\n        label=\"Name\"\n        validators={[VALIDATOR_REQUIRE()]}\n        errorText=\"Please enter a valid name.\"\n        onInput={inputHandler}\n      />\n      <Input\n        id=\"publisher\"\n        element=\"input\"\n        label=\"Publisher\"\n        validators={[VALIDATOR_REQUIRE()]}\n        errorText=\"Please enter a valid name.\"\n        onInput={inputHandler}\n      />\n      <Input\n        id=\"release\"\n        element=\"input\"\n        label=\"Release\"\n        validators={[VALIDATOR_REQUIRE()]}\n        errorText=\"Please enter a valid release.\"\n        onInput={inputHandler}\n      />\n\n      \n       <Input\n        id=\"director\"\n        element=\"input\"\n        label=\"Director\"\n        validators={[VALIDATOR_REQUIRE()]}\n        errorText=\"Please enter a valid director.\"\n        onInput={inputHandler}\n      />\n       <Input\n        id=\"rank\"\n        element=\"input\"\n        label=\"Rank\"\n        validators={[VALIDATOR_MAX(10)]}\n        errorText=\"Please enter a valid Rank MAX 10.\"\n        onInput={inputHandler}\n      />\n      <ImageUpload \n      id=\"image\"\n      onInput={inputHandler}\n      errorText=\"Please provide an image.\"\n      />\n      <Input\n        id=\"genreId\"\n        element=\"select\"\n        label=\"Select Genre\"\n        validators={[VALIDATOR_REQUIRE()]}\n        errorText=\"Please enter one of the Genre.\"\n        onInput={inputHandler}\n      />\n      \n        \n\n      <Button type=\"submit\" disabled={!formState.isValid}>\n        ADD GAME\n      </Button>\n    </form>\n    \n    </React.Fragment>\n    \n  );\n};\n\nexport default NewGame;\n","import React, { useState } from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Button from '../../shared/components/FormElements/Button';\nimport Modal from '../../shared/components/UIElements/Modal';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\n\nimport './GameItem.css';\n\n//GameItem takes data that passed from GameList and structure all valuse of the each object in the nice view \nconst GameItem = props => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n\n  const showDeleteWarningHandler = () => {\n    setShowConfirmModal(true);\n  };\n\n  const cancelDeleteHandler = () => {\n    setShowConfirmModal(false);\n  };\n\n  const confirmDeleteHandler = async () => {\n   setShowConfirmModal(false);\n    try {\n      await sendRequest(\n        `https://lit-ridge-92949.herokuapp.com/api/games/${props.id}`,\n        'DELETE'\n      );\n      props.onDelete(props.id);\n    } catch (err) {}\n  };\n \n\n  return (\n    <React.Fragment>\n    <ErrorModal error={error} onClear={clearError} />\n      <Modal\n        show={showConfirmModal}\n        onCancel={cancelDeleteHandler}\n        header=\"Are you sure?\"\n        footerClass=\"game-item__modal-actions\"\n        footer={\n          <React.Fragment>\n            <Button inverse onClick={cancelDeleteHandler}>\n              CANCEL\n            </Button>\n            <Button danger onClick={confirmDeleteHandler}>\n              DELETE\n            </Button>\n          </React.Fragment>\n        }\n      >\n        <p>\n          Do you want to proceed and delete this Game? Please note that it\n          can't be undone thereafter.\n        </p>\n      </Modal>\n      <li className=\"game-item\">\n        <Card className=\"game-item__content\">\n        {isLoading && <LoadingSpinner asOverlay />}\n          <div className=\"game-item__image\">\n            <img src={`https://lit-ridge-92949.herokuapp.com/${props.image}`} alt={props.name} />\n          </div>\n          <div className=\"game-item__info\">\n            <h2>{props.name}</h2>\n            <h3>Publisher: {props.publisher}</h3>\n            <p>Release: {props.release} Director: {props.director}</p>\n            <h3>RANK: {props.rank}</h3>\n          </div>\n          <div className=\"game-item__actions\">\n            <Button  to={`/games/${props.id}`}> EDIT</Button>\n            <Button danger onClick={showDeleteWarningHandler}>\n              DELETE\n            </Button>\n          </div>\n        </Card>\n      </li>\n    </React.Fragment>\n  );\n};\n\nexport default GameItem;\n","import React from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport GameItem from './GameItem';\nimport Button from '../../shared/components/FormElements/Button';\nimport './GameList.css';\n\nconst GameList = props => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"game-list center\">\n        <Card>\n          <h2>No games found. Maybe create one?</h2>\n          <Button to=\"/games/new\">Share game</Button>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"game-list\">\n      {props.items.map(game => (\n        <GameItem\n          key={game._id}\n          id={game._id}\n          image={game.image}\n          name={game.name}\n          publisher={game.publisher}\n          release={game.release}\n          director={game.director}\n          rank={game.rank}\n          genreId={game.genreId}\n          onDelete={props.onDeleteGame}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default GameList;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport GameList from '../components/GameList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\n//In this component fetches the data that requrite just id of the Genre \n//as we need to retrive the games that connected with this genre\nconst GenreGames = () => {\n const [loadedGames, setLoadedGames] = useState();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const genreId = useParams().genreId;\n\n  useEffect(() => {\n    const fetchGames = async () => {\n      try {\n        const responseData = await sendRequest(\n          `https://lit-ridge-92949.herokuapp.com/api/games/genre/${genreId}`\n        );\n        setLoadedGames(responseData);\n      } catch (err) {}\n    };\n    fetchGames();\n  }, [sendRequest, genreId]);\n  //After deliting checs ids if all games of this genre to remove from the list deleted one\n  const gameDeletedHandler = deletedGameId => {\n    setLoadedGames(prevGames =>\n      prevGames.filter(game => game._id !== deletedGameId)\n    );\n  };\n  //If no erros found sends data to GameList\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedGames && <GameList items={loadedGames} onDeleteGame={gameDeletedHandler} />}\n    </React.Fragment>\n  );\n};\n\nexport default GenreGames;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport { VALIDATOR_REQUIRE, VALIDATOR_MAX } from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nimport './GameForm.css';\n\nconst UpdateGame = () => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedGame, setLoadedGame] = useState();\n  const gameId = useParams().gameId;\n\n  \n\n  //in general works in same way as new game just before pushe new data I assign\n  //the id of the game and fetch data by this id and fill the form\n\n  const [formState, inputHandler, setFormData] = useForm(\n   {\n      name: {\n        value: '',\n        isValid: false\n      },\n      publisher: {\n        value: '',\n        isValid: false\n      },\n      release: {\n        value: '',\n        isValid: false\n      },\n      director: {\n        value: '',\n        isValid: false\n      },\n      rank: {\n        value: '',\n        isValid: false\n      },\n      imageUrl: {\n        value: '',\n        isValid: false\n      },\n      genreId: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  useEffect(() => {\n    const fetchGame = async () => {\n      try {\n        const responseData = await sendRequest(\n          `https://lit-ridge-92949.herokuapp.com/api/games/${gameId}`\n        );\n        setLoadedGame(responseData);\n        setFormData(\n        {\n      name: {\n        value: responseData.name,\n        isValid: true\n      },\n      publisher: {\n        value: responseData.publisher,\n        isValid: true\n      },\n      release: {\n        value: responseData.release,\n        isValid: true\n      },\n      director: {\n        value: responseData.director,\n        isValid: true\n      },\n      rank: {\n        value: responseData.rank,\n        isValid: true\n      },\n      genreId: {\n        value: responseData.genreId,\n        isValid: true\n      }\n    },\n    true\n  );\n\n      } catch (err) {}\n    };\n    fetchGame();\n  }, [sendRequest, gameId, setFormData]);\n  const history = useHistory();\n\n  const gameUpdateSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        `https://lit-ridge-92949.herokuapp.com/api/games/${gameId}`,\n        'PATCH',\n        JSON.stringify({\n        name: formState.inputs.name.value,\n        publisher: formState.inputs.publisher.value,\n        release: formState.inputs.release.value,\n        director: formState.inputs.director.value,\n        rank: formState.inputs.rank.value,\n        genreId: formState.inputs.genreId.value\n        }),\n        {\n          'Content-Type': 'application/json'\n        }\n      );\n      history.push('/');\n    } catch (err) {}\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"center\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (!loadedGame && !error) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>Could not find Game!</h2>\n        </Card>\n      </div>\n    );\n  }\n\n\n  return (\n      <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n       {!isLoading && loadedGame && (\n    <form className=\"game-form\" onSubmit={gameUpdateSubmitHandler}>\n       <Input\n        id=\"name\"\n        element=\"input\"\n        type=\"text\"\n        label=\"Name\"\n        validators={[VALIDATOR_REQUIRE()]}\n        errorText=\"Please enter a valid name.\"\n        onInput={inputHandler}\n        initialValue={loadedGame.name}\n        initialValid={true}\n      />\n      <Input\n        id=\"publisher\"\n        element=\"input\"\n        label=\"Publisher\"\n        validators={[VALIDATOR_REQUIRE()]}\n        errorText=\"Please enter a valid name.\"\n        onInput={inputHandler}\n        initialValue={loadedGame.publisher}\n        initialValid={true}\n      />\n      <Input\n        id=\"release\"\n        element=\"input\"\n        label=\"Release\"\n        validators={[VALIDATOR_REQUIRE()]}\n        errorText=\"Please enter a valid release.\"\n        onInput={inputHandler}\n        initialValue={loadedGame.release}\n        initialValid={true}\n      />\n      \n       <Input\n        id=\"director\"\n        element=\"input\"\n        label=\"Director\"\n        validators={[VALIDATOR_REQUIRE()]}\n        errorText=\"Please enter a valid director.\"\n        onInput={inputHandler}\n        initialValue={loadedGame.director}\n        initialValid={true}\n      />\n       <Input\n        id=\"rank\"\n        element=\"input\"\n        label=\"Rank\"\n        validators={[VALIDATOR_MAX(10)]}\n        errorText=\"Please enter a valid Rank MAX 10.\"\n        onInput={inputHandler}\n        initialValue={loadedGame.rank}\n        initialValid={true}\n      />\n      <Input\n        id=\"genreId\"\n        element=\"select\"\n        label=\"Select Genre\"\n        validators={[VALIDATOR_REQUIRE()]}\n        errorText=\"Please enter one of the Genre.\"\n        onInput={inputHandler}\n        initialValue={loadedGame.genreId}\n        initialValid={true}\n      />\n      <Button type=\"submit\" disabled={!formState.isValid}>\n        UPDATE GAME\n      </Button>\n    </form>\n       )}\n    </React.Fragment>\n  );\n};\n\nexport default UpdateGame;\n","import React from 'react';\n\nimport './MainHeader.css';\n\n\nconst MainHeader = props => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './NavLinks.css';\n\n\n//Navigation links component redirect user on path by presiing buttons\nconst NavLinks = props => {\n  return <ul className=\"nav-links\">\n    <li>\n      <NavLink to=\"/\" exact>All Genres</NavLink>\n    </li>\n    <li>\n      <NavLink to=\"/games/new\">Add Game</NavLink>\n    </li>\n  </ul>\n};\n\nexport default NavLinks;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './SideDrawer.css';\n\n\n//SideDrawer component that hendels user interface on different devices \nconst SideDrawer = props => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n};\n\nexport default SideDrawer;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nimport Backdrop from '../UIElements/Backdrop';\nimport './MainNavigation.css';\n\n\n//MainNAvigation component handles aall main action that user performs\n//cheks if screen size changes runs SideDrawer \nconst MainNavigation = props => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n\n      <MainHeader>\n        <button\n          className=\"main-navigation__menu-btn\"\n          onClick={openDrawerHandler}\n        >\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">My Nintendo Games</Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n","//Just the App.js which is passed to the index.js \n//This commponent holds and return the main page components\n\nimport React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from 'react-router-dom';\n\nimport Genre from './genre/pages/Genre';\nimport NewGame from './games/pages/NewGame';\nimport GenreGames from './games/pages/GenreGames';\nimport UpdateGame from './games/pages/UpdateGame';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\n\nconst App = () => {\n  return (\n    <Router>\n      <MainNavigation />\n      <main>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Genre />\n          </Route>\n          <Route path=\"/:genreId/games\" exact>\n            <GenreGames />\n          </Route>\n          <Route path=\"/games/new\" exact>\n            <NewGame />\n          </Route>\n          <Route path=\"/games/:gameId\">\n            <UpdateGame />\n          </Route>\n          <Redirect to=\"/\" />\n        </Switch>\n      </main>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\n//The most of basic functions and components for frontend was taken from https://www.udemy.com/course/react-nodejs-express-mongodb-the-mern-fullstack-guide/\n//And after custom reused and buid for my application\n\n\n\n//Take the App component and render it to the root which is on the index.html (main page)\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}